---
title: "Graphical User Interfaces"
---

## Introduction

Computing devices are indeed ubiquitous. We use them all the time for a variety of tasks. To use them,
we must inherently interact with them. In fact, there's an entire branch of computer science that deals
with the way humans interact with machines (primarily computing machines) called human-computer
interaction (HCI). In this lesson, we will focus on the way that we typically interact with computing
devices: through graphical user interfaces.

::: {.callout-tip title="Definition"}
A **graphical user interface** (GUI – pronounced “gooey”) is a type of interface that allows
users to interact with computing machines through graphical entities. An **interface** is just a program
that provides a way of interacting with a computing machine so that a user can use it to do its bidding!
:::

The interface typically monitors input (e.g., clicking with the mouse, typing on the keyboard, etc) and
controls output (e.g., the result of inputs rendered to a monitor). GUIs are the most common type of
interface between humans and computers. In fact, most software products and virtually all popular
computer operating systems are GUI-based.

Formally, GUIs implement an interface metaphor, such as a *desktop*, that allows users to interact with
computer systems. Software objects, such as programs and data files, are generally represented as
postage stamp sized pictures called **icons**. A human can access one of these objects by selecting it with
a pointing device, such as a **mouse**. When *opened*, an icon expands to become a **window**. A window is
a portion of the computer screen used to communicate with a particular program. Generally, windows
and icons can be resized (i.e., made larger or smaller) and repositioned anywhere on the desktop. But of
course, you already know all this!

## GUI components
Although the types of components that make up a GUI can vary depending on operating system,
application, and various other factors, there are many standard ones that virtually all GUIs support:

• Window: an area on the screen that displays information.

• Menu: allows users to execute commands by selecting from a list of options.

• Icon: a small picture that represents something else (e.g., a file, an application, a command).

• Control: also known as a widget, a component that users directly interact with (e.g., by clicking,
dragging, etc) to perform some task (e.g., launch an application, set a configuration setting, etc).
There are many types of controls that you may be familiar with: list, label, check box, radio
button, slider, spinner, and so on.

• Tab: a way of grouping GUI components in an area of a window.

## Events
On their own, GUIs really do nothing. That is, they are specifically designed for user interaction. Users
must interact with a GUI, and when that happens, an event occurs that *triggers* some sort of **action**. An action can be virtually anything, such as opening a file, launching an application, performing a background task, and so on. We often say that some GUI components *listen* for user interaction; that is,they implement what is known as a **listener**. When the listener detects user interaction (e.g., through a mouse click), the interaction is registered as an **event**. The event then triggers some predefined action that handles it and typically produces some output that is expected by the user.




