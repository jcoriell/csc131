---
title: "Program: Squad Names"
---

## Overview 
Your task in this assignment is to write a program that calculates the frequency of names (or substrings) in a provided squad list file. You are provided with a text file that contains the names of all the squad players in the 2022 Fifa World Cup tournament for you to be able to test your code. Each name is on a different line in this file. Your code should prompt the user for a name (or substring), and then print out some statistics that include how many names contain that substring. Below is a sample run with user input in red.

<pre class="styled-pre">
What file do you want to open? <span style="color: red;">input.txt</span>
the file has 892 names in it
What name (or substring) are you interested in searching for? <span style="color: red;">ad</span>.
--------------------------------------------------
2 names start with this string
3 names end with this string
39 names contain this string
--------------------------------------------------
</pre>

It is worth mentioning that your code should recognize when the file name provided does not exist and provide the user with an opportunity to type in the correct file name. Below is a sample run with that functionality demonstrated.

<pre class="styled-pre">
What file do you want to open? <span style="color: red;">intput.txt</span>
The file name you specified does not exist.
Enter file name again: <span style="color: red;">tinput.text</span>
The file name you specified does not exist.
Enter file name again: <span style="color: red;">someotherfile.text</span>
The file name you specified does not exist.
Enter file name again: <span style="color: red;">input.text</span>
the file has 892 names in it
What name (or substring) are you interested in searching for? <span style="color: red;">pulisic</span>.
--------------------------------------------------
0 names start with this string
1 names end with this string
1 names contain this string
--------------------------------------------------
</pre>

## Expected Functions

In order to accomplish this, you will write functions that will read the file and then search for that string. The functions you should write are as follows:

### Read File

The purpose of this function is to load a file and return each line of that file as a separate value in a list. Note that when reading lines, you might end up with newline characters or blank characters at the end of each line. You will need to remove those characters for the tests to run properly.

This function should be named `readFile`.

It should have 1 parameter that represents the name of the file as a string.

It should return a list where each value in the list is a line from the file that was loaded. 

### Begins With

This function receives two string arguments and returns a boolean that represents whether the first string begins with the second string.
This function should be named `beginswith`.


### Ends With

The `endswith` function receives two string arguments and returns a boolean that represents whether the first string ends with the second string.

Be sure the function is named `endswith`.

### Contains

The `contains` receives two string arguments and returns a boolean that represents whether the first string contains the second string.

Be sure the function is named `contains`.

### Get Stats

The `getStats` function receives two arguments: a list of names, and a substring (in that order). It then creates a short 3 element list that contains the number of times that the substring appears in the list. The first element is the number of names in which the substring appears at the beginning. The second element in the number of names in which the substring appears at the end. The third element in the number of names that contain the substring. The function should return the 3 element list with the correct stats.

Be sure the function is named `getStats`

### Main

This function will be responsible for calling on each of the functions above so that the program produces the desired output. It should first prompt the user for a file name, then read the file, and then produce the appropriate output as shown int he samples above.

This function should be called `main` and will have no parameters.


## Helper Files

<a href="./input.txt" download>input.txt</a>

<a href="./template.py" download>template.py</a>


## Additional Info

1. You are provided with an input file called `input.txt` that contains the names you will be
parsing. Note that your code should be able to parse any filename that the user provides and not
just files named `input.txt`

2. Your program will require at least the functions mentioned above. Feel free to add any extra
functions you think are necessary.

3. Feel free to include in a section of your file the conditional as follows so that you can test your file locally and not need to modify anything when you upload it to the autograder.

    ```Python
    if __name__ == "__main__":
        # code you want to test
    ```

    Recall that this conditional will allow code to run when you directly run a file, however, when a file is imported into another file, the code inside the conditional will not run. The autograder works by importing your file into another file, so the code inside this conditional will not run on the autograder.

4. A lot of the functionality that is required in this assignment can easily be implemented by taking
advantage of some of pythonâ€™s inbuilt string functions. You are encouraged to look up python
string functions to get an understanding of what functionality you have available to you when
dealing with strings.

5. Your output should be exactly like the sample runs shown above (of course, actual results will
vary depending on the provided input text file and substrings/names);

6. You must include a meaningful header, use good coding style, use meaningful variable names,
and comment your source code where appropriate;


7. You must use the provided source code template (it contains helpful comments that can help you
structure your code); and

8. You must submit your source code as a single .py file. The name of the file does not matter.



