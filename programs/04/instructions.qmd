---
title: "Program #4: Height"
---

## Overview 

Your task in this assignment is to write python code that would
implement a simple **Height** class that could potentially be used as a
small part of a much larger program. To allow for its use with other
systems, the specifications for the Height class are defined below

## Class details

The class should be called `Height`.

### Constructor

The constructor takes two arguments for the `ft` and `inch` elements of
any `Height` object. The constructor also uses default values of `0` for
both `ft` and `inch` elements if they are not provided.

### Accessors and Mutators

The class should have accessors and mutators for **all** instance
variables which use the decorator method discussed in class.
Additionally

* the `ft` and `inch` mutators should not allow for those variables to
  be set to negative values.  If that is attempted, they are set to `0`
  instead.

* The `inch` mutator should not allow for values larger than or equal to 
  `12`. If that is attempted, the `ft` value is updated accordingly. 
  For example, creating a `Height` object with `1ft` and `26 inches` 
  should result in a `Height` object with `3 ft` and `2 inches`.

### Extra functions

* The class should have an `inches` function that returns the total
  number of inches that the `Height` object is worth.

* The class should also contain a `__str__` function that determines 
  how Height objects are represented when printed i.e. `3’ 2”` for an 
  object with `3 ft` and `2 inch`.

* The class should also overload some mathematical and comparison 
  operators i.e. defines what those operators mean in the context of 
  `Height` objects.
  + The operators in question include `+`, `-`, `>`, `>=`, `<=`, `<`,
    `==`, and `!=`.
  + Note that the mathematical operators above should return `Height`
    objects with the appropriate state. 

* Feel free to add any other functions that you feel will help to make
  your class more efficient and/ or neater.

### `main` function

The template provided contains an existing `main` function that will
test the functionality defined above that your class should have. The
tests include, but are not limited to, Object creation, mathematical and
comparison operators, and the functionality of the other functions.

You should not change the `main` function in any way. Note that if you
experience any errors during your class creation, those errors can be
resolved by making adjustments to your `Height` class instead.

Successful running of your code will produce the expected output shown
below.


<pre class="styled-pre">
h1 = 6' 5"
h2 = 2' 11"
h3 = 0' 0"
h4 = 4' 0"
h5 = 6' 5"
h6 = 0' 0"
========================================
6' 5" is in fact 77 inches
0' 0" is in fact 0 inches
6' 5" is in fact 77 inches
========================================
6' 5" + 2' 11" = 9' 4"
6' 5" - 4' 10" = 1' 7"
4' 0" - 6' 5" = 0' 0"
6' 5" + 0' 1" = 6' 6"
========================================
6' 5" > 2' 11": True
6' 5" < 6' 5": False
6' 5" >= 6' 5": True
2' 11" <= 6' 5": True
9' 4" == 9' 4": True
6' 5" == 6' 6": False
6' 5" >= 6' 6": False
6' 5" == 6' 5": True
2' 10" != 2' 11": True
========================================
</pre>

Note that creating a program that produces the output shown above does
**not** mean that your program has met all the requirements for the
assignment.

## Helper Files

<a href="./files/template.py" download>template.py</a>
